/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

(function ($, Hammer, window) {
  $(function () {
    $('.paragraph--type--box-group, .view-display-id-block_3').each(function () {
      var $container = $(this);
      var $nav = $container.find('.horizontal-nav');
      var $left = $nav.children('.horizontal-nav--left');
      var $right = $nav.children('.horizontal-nav--right');
      var $boxes = $container.children('.field--name-field-boxes, .view-content');

      $left.add($right).on('click', function () {
        navigate($container, this === $left.get(0) ? 'left' : 'right');
        return false;
      });

      new Hammer(this).on('panleft', function () {
        return navigate($container, 'left');
      });
      new Hammer(this).on('panright', function () {
        return navigate($container, 'right');
      });

      $(window).on('resize orientationchange', function () {
        $boxes.css('left', '0');
        updateNavigation($container);
      });

      updateNavigation($container);
    });
  });

  function navigate($container, direction) {
    var $nav = $container.find('.horizontal-nav');
    var $boxes = $container.children('.field--name-field-boxes, .view-content');

    if ($nav.children('.horizontal-nav--' + direction).hasClass('inactive') || $boxes.is(':animated')) {
      return;
    }

    var boxWidth = $boxes.children().first().outerWidth();

    $boxes.stop(true, true).animate({
      left: direction === 'left' ? '-=' + boxWidth : '+=' + boxWidth
    }).promise().done(function () {
      return updateNavigation($container);
    });
  }

  function updateNavigation($container) {
    var $nav = $container.find('.horizontal-nav');
    var $left = $nav.children('.horizontal-nav--left');
    var $right = $nav.children('.horizontal-nav--right');
    var $boxes = $container.children('.field--name-field-boxes, .view-content');
    var boxWidth = $boxes.children().first().outerWidth();
    var firstBoxOffset = $boxes.children().first().offset().left;
    var lastBoxOffset = $boxes.children().last().offset().left;

    $left.toggleClass('inactive', Math.floor(lastBoxOffset + boxWidth) <= Math.ceil($container.offset().left + $container.outerWidth()));

    $right.toggleClass('inactive', firstBoxOffset >= $container.offset().left);

    if ($left.hasClass('inactive') && $right.hasClass('inactive')) {
      $nav.hide();
    } else {
      $nav.show();
    }
  }
})(jQuery, Hammer, window);