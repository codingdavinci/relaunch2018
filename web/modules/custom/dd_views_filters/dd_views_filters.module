<?php

use Drupal\Core\Database\Database;
use Drupal\Core\Database\Query\Condition;
use Drupal\Core\Form\FormStateInterface;
use Drupal\node\Entity\Node;
use Drupal\views\Plugin\views\query\Sql;
use Drupal\views\ViewExecutable;
use Drupal\views\Plugin\views\row\NodeRow;
use Drupal\Core\Language\LanguageInterface;
use Drupal\taxonomy\Entity\Term;


function dd_views_filters_cache_products_run() {

  \Drupal::database()->truncate('dd_views_projects')->execute();

  $conn = \Drupal::database();
  $query = $conn->query("
    SELECT DISTINCT
      node_field_data.nid,
      node_field_data.title,
      node_field_data.created
    FROM
      node_field_data
    WHERE (node_field_data.type IN ('project')) AND (node_field_data.status = '1') AND node_field_data.langcode = 'de'
    ORDER BY created DESC ");

  while ($row = $query->fetchAssoc()) {
    dd_views_filters_cache_product($conn, $row);
  }
}

function dd_views_filters_cache_product($conn, $row) {

  $tids   = array();
  $titles = array();
  $winner_tid   = 0;
  $winner_title = "";

  $node = \Drupal::entityTypeManager()->getStorage("node")->load($row['nid']);
  $terms = $node->field_tags->referencedEntities();

  foreach ($terms as $term) {
    $titles[]= $term->getName();
    $tids[]= $term->id();
  }

  $event_nid = $node->get('field_event')->entity->id();

  $event = \Drupal::entityTypeManager()->getStorage("node")->load($event_nid);
  $field_winners = $event->get("field_winners")->referencedEntities();

  foreach ($field_winners as $winner) {
    if ($winner->get("field_project")->entity->id() == $row['nid']) {
      $winner_tid   = $winner->get("field_award")->entity->id();
      $winner_title = $winner->get("field_award")->entity->getName();
    }
  }

  $conn->insert('dd_views_projects')->fields(
    array(
      'nid'            => $row["nid"],
      'node_title'     => $row["title"],
      "description"     =>$node->field_short_description->value,
      'event_nid'      => $event_nid,
      'node_created'   => $row["created"],
      'winner_tid'     => $winner_tid,
      'winner_title'   => $winner_title,
      'projecttype_tids'   => implode(", ", $tids),
      'projecttype_titles' => implode(", ", $titles),
    )
  )->execute();
}

function dd_views_filters_cache_datasets_run() {

  $conn = \Drupal::database();

  $object_types_first_level = dd_views_filters_load_taxonomy("object_types");

  $conn->truncate('dd_views_datasets')->execute();


  $query = $conn->query("
    SELECT
      node_field_data.nid,
      node_field_data.title,
      node_field_data.created
    FROM
	    node_field_data
    WHERE (node_field_data.type IN ('data_set')) AND (node_field_data.status = '1') AND (node_field_data.langcode = 'de')
    ORDER BY created ASC
  ");

  while ($row = $query->fetchAssoc()) {
    // dd_views_filters_cache_dataset($conn, $object_types_first_level, $row);
  }
}

function dd_views_filters_cache_dataset($conn, $object_types_first_level,  $row) {

  $field_media_license = 0;
  $media_license = 0;

  $events_nids   = array();
  $events_titles = array();

  $theme_nids   = array();

  $object_types_tids   = array();
  $subobject_types_tids = array();

  $node = \Drupal::entityTypeManager()->getStorage("node")->load($row['nid']);
  $events = $node->field_events->referencedEntities();
  $author_name = $node->getOwner()->field_institution_name->value;

  foreach ($events as $term) {
    if ($term && $term->field_event && $term->field_event->entity) {
      $events_nids[]= $term->field_event->entity->id();
      $events_titles[]= $term->field_event->entity->title->value;
    }
  }

  $object_types = $node->field_object_type->referencedEntities();
  foreach ($object_types as $term) {
    if (in_array($term->id(), $object_types_first_level)) {
      $object_types_tids[]= $term->id();
    } else {
      // Fill $subobject_types_tids...
      $subobject_types_tids[]= $term->id();
    }
  }

  if ($node->get('field_media_license') && isset($node->get('field_media_license')[0]) && $node->get('field_media_license')[0]->entity) {
    if ($node->get('field_media_license')[0]->entity->field_license && $node->get('field_media_license')[0]->entity->field_license->entity) {

      $media_license = $node->get('field_media_license')[0]->entity->field_license->entity->id();

      $media_license_term = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($media_license);
      $parent_term_id = $media_license_term->parent->target_id;

      // has a parent, use parents tid
      if ($media_license_term->parent->target_id != 0) {
        $field_media_license = $media_license_term->parent->target_id;
      } else {
        // no parent, first level already
        $field_media_license = $media_license;
      }
    }
  }

  $theme = $node->field_theme->referencedEntities();
  foreach ($theme as $term) {
    if ($term) {
      $theme_nids[]= $term->id();
    }
  }

  $field_description = $node->get('field_description')->value;

  $conn->insert('dd_views_datasets')->fields(
      array(
        'nid'     => $row["nid"],
        'created' => $row["created"],
        'title'   => $row["title"],
        'description'   => strip_tags($field_description),
        'theme_nids'    => implode(", ", $theme_nids),
        'events_nids'   => implode(", ", $events_nids),
        'events_titles' => implode(", ", $events_titles),
        'object_types_tids'   => implode(", ", $object_types_tids),
        'subobject_types_tids'   => implode(", ", $subobject_types_tids),
        'field_media_license' => $field_media_license,
        'author_name' => $author_name,
      )
    )->execute();
}


function dd_views_filters_load_taxonomy($vid) {
  $out = array();

  $langcode = \Drupal::service('language_manager')->getCurrentLanguage(LanguageInterface::TYPE_CONTENT)->getId();

  $database = \Drupal::database();
  $query = $database->query(sprintf("SELECT
      taxonomy_term_data.tid,
      taxonomy_term_field_data.name
    FROM
      taxonomy_term_data taxonomy_term_data
    LEFT JOIN taxonomy_term_field_data ON taxonomy_term_field_data.tid = taxonomy_term_data.tid
    LEFT JOIN taxonomy_term__parent ON taxonomy_term__parent.entity_id = taxonomy_term_data.tid
    WHERE
      taxonomy_term_data.vid='%s' AND taxonomy_term_field_data.langcode='de' AND taxonomy_term__parent.parent_target_id=0
    ORDER by taxonomy_term_field_data.name ASC", $vid));

  while ($row = $query->fetchAssoc()) {
    $out[]= $row['tid'];
  }
  return $out;
}

/**
 * Implements hook_cron().
 */
function dd_views_filters_cron() {
  dd_views_filters_cache_products_run();
  dd_views_filters_cache_datasets_run();
}
