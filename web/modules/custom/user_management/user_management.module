<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\user\Entity\User;

const USER_MANAGEMENT_DEFAULT_ROLE_ID = 'project_team';
const USER_MANAGEMENT_SELECTABLE_ROLE_IDS = ['institution', 'project_team'];

/**
 * Implements hook_preprocess_HOOK().
 *
 * @param array $variables
 */
function user_management_preprocess_html(array &$variables) {
  if (\Drupal::service('path.current')->getPath() === '/user/register') {
    if (($role = \Drupal::request()->query->get('role')) === 'institution') {
      $variables['head_title']['title'] = t('Create new institution account');
    }
    else {
      $variables['head_title']['title'] = t('Create new participant account');
    }
    \Drupal::service('page_cache_kill_switch')->trigger();
  }
}

/**
 * Implements hook_preprocess_HOOK().
 *
 * @param array $variables
 */
function user_management_preprocess_block__page_title_block(array &$variables) {
  if (\Drupal::service('path.current')->getPath() === '/user/register') {
    if (($role = \Drupal::request()->query->get('role')) === 'institution') {
      $variables['content']['#title'] = t('Create new institution account');
    }
    else {
      $variables['content']['#title'] = t('Create new participant account');
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 *
 * @param array $variables
 */
function user_management_preprocess_block__login_actions(array &$variables) {
  if (($role = \Drupal::request()->query->get('role')) !== null) {
    foreach ($variables['content']['#primary'] as &$route) {
      /** @var \Drupal\Core\Url $url */
      $url = $route['#link']['url'];
      $url->setRouteParameter('role', $role);
      $route['#link']['url'] = $url;
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * @param array $form
 */
function user_management_form_user_register_form_alter(array &$form) {
  if (\Drupal::routeMatch()->getRouteName() !== 'user.register') {
    return;
  }

  $role = \Drupal::request()->query->get('role');

  if ($role !== 'institution') {
    $role = USER_MANAGEMENT_DEFAULT_ROLE_ID;
  }

  $form['user_management__role'] = [
    '#type' => 'hidden',
    '#value' => $role,
  ];

  $form['actions']['submit']['#submit'][] = '_user_management_submit';
}

/**
 * Custom submit handler for the user registration form.
 * If a role id was specified using a query parameter, the submit handler will
 * update the new user assigning the user that role, as long as that role is
 * allowed to be set automatically.
 *
 * @param array $form
 * @param FormStateInterface $form_state
 */
function _user_management_submit(array $form, FormStateInterface &$form_state) {
  if ($form_state->hasValue('user_management__role')) {
    $roleId = $form_state->getValue('user_management__role');

    if ($roleId === null) {
      return;
    }

    if (!in_array($roleId, USER_MANAGEMENT_SELECTABLE_ROLE_IDS)) {
      throw new Exception('user_management module: invalid operation');
    }
  }

  $role = \Drupal::entityTypeManager()->getStorage('user_role')->load($roleId);

  if ($role !== null) {
    /** @var User $user */
    $user = User::load($form_state->getValue('uid'));
    $user->addRole($role->id());
    $user->save();
  }
}
